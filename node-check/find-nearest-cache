#!/usr/bin/env python                                                                                                                                                  
# Code and configuration files contributed by Edgar Fajardo, OSG Software
""" Finding nearest cache based on list                                                                                                 
"""
import json
import os
import subprocess
import sys


def _run_command(command):
    """Runs the specified command, specified as a list. Returns stdout, stderr and return code                                                                         
    """
    proc = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    stdout, stderr = proc.communicate()
    return stdout, stderr, proc.returncode

def findMyPublicIp():
    cmd = ['wget', '-4', '-qO', '-', 'icanhazip.com']
    return _run_command(cmd)

def cache_list_to_string(cache_list):
    comma_list = ""
    for cache in cache_list:
        comma_list += cache + ","
    return comma_list

CACHE_LIST = ["mwt2-stashcache.campuscluster.illinois.edu", "its-condor-xrootd1.syr.edu","osg-kansas-city-stashcache.nrp.internet2.edu","osg-chicago-stashcache.nrp.internet2.edu","osg-new-york-stashcache.nrp.internet2.edu","sc-cache.chtc.wisc.edu","osg-gftp.pace.gatech.edu"]

if (os.path.exists('cache-list.json')):
    with open('cache-list.json') as f:
        CACHE_LIST = json.load(f)
        
OASIS_HOST = "oasis-replica.opensciencegrid.org"

(MyPublicIp, err, code) = findMyPublicIp()

if code != 0:
    print("nocachefound.com")
    sys.exit(1)

MyPublicIp = MyPublicIp.rstrip();
comma_list = cache_list_to_string(CACHE_LIST)
cmd = ["curl", "http://%s:8000/cvmfs/dwd.test/api/v1.0/geo/%s/%s" % (OASIS_HOST, MyPublicIp, comma_list)]
(order_list_caches, stderr, errcode) = _run_command(cmd)
order_list_caches = order_list_caches.split(",")

nearest_cache = CACHE_LIST[int(order_list_caches[0])-1]
print(nearest_cache)

